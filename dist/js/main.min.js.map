{"version":3,"sources":["main.js"],"names":["Site","mobileThreshold","init","_this","this","$","window","resize","onResize","document","ready","length","Player","Portraits","Paypal","Gallery","fixWidows","each","string","html","replace","instances","options","pagination","loop","slidesPerView","loopedSlides","spaceBetween","paginationClickable","centeredSlides","onTap","swiper","slideNext","index","element","Swiper","styleForm","removeClass","styleBuy","$buy","$form","find","$select","attr","wrap","prepend","remove","playerOptions","controls","modestbranding","rel","$playerContainer","bind","onYouTubePlayerAPIReady","initYoutube","on","event","data","list","youtubeIds","$player","YT","playerVars","playVideo","videoId","loadVideoById","$filters","$grid","$portraits","initGrid","isotope","itemSelector","layoutMode","addEventListener","runs","update","setTimeout","handleFilterChange","dataset","youtubeId","handleArrangeComplete","getFilteredYoutubeIds","map","val","trigger","filterSelector","getFilterSelector","filter","selector","value"],"mappings":"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","file":"main.min.js","sourcesContent":["/* jshint browser: true, devel: true, indent: 2, curly: true, eqeqeq: true, futurehostile: true, latedef: true, undef: true, unused: true */\n/* global $, jQuery, document, Site, YT */\n\nSite = {\n  mobileThreshold: 601,\n  init: function() {\n    var _this = this;\n\n    $(window).resize(function(){\n      _this.onResize();\n    });\n\n    $(document).ready(function () {\n\n      if ($('#portraits').length) {\n        // Init player\n        Site.Player.init();\n        // Init grid\n        Site.Portraits.init();\n      }\n\n      if ($('.paypal-form-holder').length) {\n        Site.Paypal.init();\n      }\n\n      if ($('.swiper-container').length) {\n        // Init any galleries\n        Site.Gallery.init();\n      }\n\n    });\n\n  },\n\n  onResize: function() {\n    var _this = this;\n\n  },\n\n  fixWidows: function() {\n    // utility class mainly for use on headines to avoid widows [single words on a new line]\n    $('.js-fix-widows').each(function(){\n      var string = $(this).html();\n      string = string.replace(/ ([^ ]*)$/,'&nbsp;$1');\n      $(this).html(string);\n    });\n  },\n};\n\nSite.Gallery = {\n  instances: [],\n  options: {\n    pagination: '.swiper-pagination',\n    loop: true,\n    slidesPerView: 'auto',\n    loopedSlides: 5,\n    spaceBetween: 0,\n    paginationClickable: true,\n    centeredSlides: true,\n    onTap: function(swiper) {\n      swiper.slideNext();\n    },\n  },\n\n  init: function() {\n    var _this = this;\n\n    // Find and loop all swiper containers\n    $('.swiper-container').each(function(index, element) {\n      // Create and save instance on instances array\n      _this.instances[index] = new Swiper (element, _this.options);\n    });\n\n  },\n};\n\nSite.Paypal = {\n  init: function() {\n    var _this = this;\n\n    var $form = $('.paypal-form-holder form');\n\n    $form.each(function() {\n      _this.styleForm($(this));\n    });\n\n    $('.paypal-form-holder').removeClass('u-hidden');\n\n  },\n\n  styleBuy: function($buy) {\n\n  },\n\n  styleForm: function($form) {\n    var $buy = $form.find('input[name=\"submit\"]');\n    var $select = $form.find('select');\n\n    // Style Buy button\n    $buy.attr('type', 'submit');\n    $buy.attr('value', 'Buy');\n    $buy.wrap('<div class=\"grid-item item-s-6\"></div>');\n\n    // Style select\n    if ($select.length) {\n      $form.prepend($select);\n      $form.find('table').remove();\n      $select.wrap('<div class=\"grid-item item-s-6\"></div>');\n    }\n  },\n\n};\n\nSite.Player = {\n  playerOptions: {\n    // https://developers.google.com/youtube/player_parameters?playerVersion=HTML5#Parameters\n    controls: 0,\n    modestbranding: 1,\n    rel: 0,\n  },\n\n  init: function() {\n    var _this = this;\n\n    // Get the player container element\n    _this.$playerContainer = $('#player-iframe');\n\n    // Bind stuff\n    _this.bind();\n\n  },\n\n  bind: function() {\n    var _this = this;\n\n    // Init youtube whuen youtube api is ready\n    // TODO: subscribe to this event with jQuery\n    window.onYouTubePlayerAPIReady = _this.initYoutube.bind(_this);\n\n    // Listen for updatedyoutubelist\n    $(window).on('updatedyoutubelist', function(event, data) {\n\n      // Update list cache\n      _this.list = data.youtubeIds;\n    });\n  },\n\n  initYoutube: function() {\n    var _this = this;\n\n    // Init youtube player inside #player-container\n    _this.$player = new YT.Player('player-iframe', {playerVars: _this.playerOptions});\n\n  },\n\n  playVideo: function(videoId, list) {\n    var _this = this;\n\n    // Play video\n    _this.$player.loadVideoById(videoId);\n\n    // Update list cache\n    if(list) {\n      _this.list = list;\n    }\n  },\n\n};\n\nSite.Portraits = {\n  init: function() {\n    var _this = this;\n\n    // Get filters form element\n    _this.$form = $('#portraits-filters');\n\n    // Get filters select elements\n    _this.$filters = _this.$form.find('select');\n\n    // Get grid element\n    _this.$grid = $('#portraits-grid');\n\n    // Get portraits\n    _this.$portraits = _this.$grid.find('.portrait');\n\n    // Init grid\n    _this.initGrid();\n\n    // Bind stuff\n    _this.bind();\n\n  },\n\n  initGrid: function() {\n    var _this = this;\n\n    // Set grid with isotope\n    _this.$grid.isotope({\n      // options\n      itemSelector: '.grid-item',\n      layoutMode: 'fitRows'\n    });\n\n    // Workaround to make it compatible with lazysizes\n    _this.$grid[0].addEventListener('load', (function(){\n      var runs;\n      var update = function(){\n        _this.$grid.isotope('layout');\n        runs = false;\n      };\n      return function(){\n        if(!runs){\n          runs = true;\n          setTimeout(update, 33);\n        }\n      };\n    }()), true);\n\n  },\n\n  bind: function() {\n    var _this = this;\n\n    // Bind select filters change\n    _this.$filters = $('.filter-select').on('change', _this.handleFilterChange.bind(_this));\n\n    // Bind portrait clicks\n    _this.$portraits.on('click', function() {\n      _this.playVideo(this.dataset.youtubeId);\n    });\n\n    // Bind arrange complete grid event\n    _this.$grid.on('arrangeComplete',_this.handleArrangeComplete.bind(_this));\n  },\n\n  playVideo: function(videoId) {\n    var _this = this;\n\n    Site.Player.playVideo(videoId);\n\n    // TODO: scroll to video\n  },\n\n  // Get a list of youtube ids (filtered in the list)\n  getFilteredYoutubeIds: function() {\n    var _this = this;\n\n    // Get the filtered elements\n    var filteredElements = _this.$grid.isotope('getFilteredItemElements');\n\n    // Get youtubeIds\n    var youtubeIds = filteredElements.map( function(val) {\n      return val.dataset.youtubeId;\n    });\n\n    return youtubeIds;\n  },\n\n  handleArrangeComplete: function(event) {\n    var _this = this;\n\n    var youtubeIds = _this.getFilteredYoutubeIds();\n\n    // Trigger an event with the list of youtube Ids\n    $(window).trigger('updatedyoutubelist', {\n      youtubeIds: youtubeIds,\n    });\n\n  },\n\n  handleFilterChange: function(event) {\n    var _this = this;\n\n    // Get the selector text to be used for filtering\n    var filterSelector = _this.getFilterSelector();\n\n    // Filter using the selector on Isotope\n    _this.$grid.isotope({\n      filter: filterSelector,\n    });\n\n  },\n\n  // Return a string selector based on the filter values\n  // Eg. '[data-filters*=age-20]'\n  //     '[data-filters*=age-20][data-filters*=subject-subject-1]'\n  getFilterSelector: function() {\n    var _this = this;\n\n    var selector = '';\n\n    // Iterate thru the filters to get it's values\n    _this.$filters.each( function(index) {\n      if(this.value) {\n\n        // Build up selector string\n        selector += '[data-filters*=' + this.dataset.filter + '-' + this.value + ']';\n      }\n    });\n\n    return selector;\n  },\n\n};\n\nSite.init();\n"]}