{"version":3,"sources":["main.js"],"names":["Site","mobileThreshold","init","_this","this","$","window","resize","onResize","document","ready","Swiper","pagination","loop","slidesPerView","loopedSlides","spaceBetween","paginationClickable","centeredSlides","slideToClickedSlide","length","Player","Portraits","Paypal","fixWidows","each","string","html","replace","styleForm","removeClass","styleBuy","$buy","$form","find","$select","attr","wrap","prepend","remove","$playeContainer","bind","onYouTubePlayerAPIReady","initYoutube","on","event","data","list","youtubeIds","$player","YT","playVideo","videoId","loadVideoById","$filters","$grid","$portraits","initGrid","isotope","itemSelector","layoutMode","addEventListener","runs","update","setTimeout","handleFilterChange","dataset","youtubeId","handleArrangeComplete","getFilteredYoutubeIds","map","val","trigger","filterSelector","getFilterSelector","filter","selector","index","value"],"mappings":"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","file":"main.min.js","sourcesContent":["/* jshint browser: true, devel: true, indent: 2, curly: true, eqeqeq: true, futurehostile: true, latedef: true, undef: true, unused: true */\n/* global $, jQuery, document, Site, Modernizr */\n\nSite = {\n  mobileThreshold: 601,\n  init: function() {\n    var _this = this;\n\n    $(window).resize(function(){\n      _this.onResize();\n    });\n\n    $(document).ready(function () {\n\n      var mySwiper = new Swiper ('.swiper-container', {\n        // Optional parameters\n        pagination: '.swiper-pagination',\n        loop: true,\n        slidesPerView: 'auto',\n        loopedSlides: 5,\n        spaceBetween: 0,\n        paginationClickable: true,\n        centeredSlides: true,\n        slideToClickedSlide: true,\n      });\n\n\n      if ($('#portraits').length) {\n        // Init player\n        Site.Player.init();\n        // Init grid\n        Site.Portraits.init();\n      }\n\n      if ($('.paypal-form-holder').length) {\n        Site.Paypal.init();\n      }\n\n    });\n\n  },\n\n  onResize: function() {\n    var _this = this;\n\n  },\n\n  fixWidows: function() {\n    // utility class mainly for use on headines to avoid widows [single words on a new line]\n    $('.js-fix-widows').each(function(){\n      var string = $(this).html();\n      string = string.replace(/ ([^ ]*)$/,'&nbsp;$1');\n      $(this).html(string);\n    });\n  },\n};\n\nSite.Paypal = {\n  init: function() {\n    var _this = this;\n\n    var $form = $('.paypal-form-holder form');\n\n    $form.each(function() {\n      _this.styleForm($(this));\n    });\n\n    $('.paypal-form-holder').removeClass('u-hidden');\n\n  },\n\n  styleBuy: function($buy) {\n\n  },\n\n  styleForm: function($form) {\n    var $buy = $form.find('input[name=\"submit\"]');\n    var $select = $form.find('select');\n\n    // Style Buy button\n    $buy.attr('type', 'submit');\n    $buy.attr('value', 'Buy');\n    $buy.wrap('<div class=\"grid-item item-s-6\"></div>');\n\n    // Style select\n    if ($select.length) {\n      $form.prepend($select);\n      $form.find('table').remove();\n      $select.wrap('<div class=\"grid-item item-s-6\"></div>');\n    }\n  },\n\n};\n\nSite.Player = {\n  init: function() {\n    var _this = this;\n\n    // Get the player container element\n    _this.$playeContainer = $('#player-iframe');\n\n    // Bind stuff\n    _this.bind();\n\n  },\n\n  bind: function() {\n    var _this = this;\n\n    // Init youtube whuen youtube api is ready\n    // TODO: subscribe to this event with jQuery\n    window.onYouTubePlayerAPIReady = _this.initYoutube.bind(_this);\n\n    // Listen for updatedyoutubelist\n    $(window).on('updatedyoutubelist', function(event, data) {\n\n      // Update list cache\n      _this.list = data.youtubeIds;\n    });\n  },\n\n  initYoutube: function() {\n    var _this = this;\n\n    // Init youtube player inside #player-container\n    _this.$player = new YT.Player('player-iframe');\n\n  },\n\n  playVideo: function(videoId, list) {\n    var _this = this;\n\n    // Play video\n    _this.$player.loadVideoById(videoId);\n\n    // Update list cache\n    if(list) {\n      _this.list = list;\n    }\n  },\n\n};\n\nSite.Portraits = {\n  init: function() {\n    var _this = this;\n\n    // Get filters form element\n    _this.$form = $('#portraits-filters');\n\n    // Get filters select elements\n    _this.$filters = _this.$form.find('select');\n\n    // Get grid element\n    _this.$grid = $('#portraits-grid');\n\n    // Get portraits\n    _this.$portraits = _this.$grid.find('.portrait');\n\n    // Init grid\n    _this.initGrid();\n\n    // Bind stuff\n    _this.bind();\n\n  },\n\n  initGrid: function() {\n    var _this = this;\n\n    // Set grid with isotope\n    _this.$grid.isotope({\n      // options\n      itemSelector: '.grid-item',\n      layoutMode: 'fitRows'\n    });\n\n    // Workaround to make it compatible with lazysizes\n    _this.$grid[0].addEventListener('load', (function(){\n      var runs;\n      var update = function(){\n        _this.$grid.isotope('layout');\n        runs = false;\n      };\n      return function(){\n        if(!runs){\n          runs = true;\n          setTimeout(update, 33);\n        }\n      };\n    }()), true);\n\n  },\n\n  bind: function() {\n    var _this = this;\n\n    // Bind select filters change\n    _this.$filters = $('.filter-select').on('change', _this.handleFilterChange.bind(_this));\n\n    // Bind portrait clicks\n    _this.$portraits.on('click', function() {\n      _this.playVideo(this.dataset.youtubeId);\n    });\n\n    // Bind arrange complete grid event\n    _this.$grid.on('arrangeComplete',_this.handleArrangeComplete.bind(_this));\n  },\n\n  playVideo: function(videoId) {\n    var _this = this;\n\n    Site.Player.playVideo(videoId);\n\n    // TODO: scroll to video\n  },\n\n  // Get a list of youtube ids (filtered in the list)\n  getFilteredYoutubeIds: function() {\n    var _this = this;\n\n    // Get the filtered elements\n    var filteredElements = _this.$grid.isotope('getFilteredItemElements');\n\n    // Get youtubeIds\n    var youtubeIds = filteredElements.map( function(val) {\n      return val.dataset.youtubeId;\n    });\n\n    return youtubeIds;\n  },\n\n  handleArrangeComplete: function(event) {\n    var _this = this;\n\n    var youtubeIds = _this.getFilteredYoutubeIds();\n\n    // Trigger an event with the list of youtube Ids\n    $(window).trigger('updatedyoutubelist', {\n      youtubeIds: youtubeIds,\n    });\n\n  },\n\n  handleFilterChange: function(event) {\n    var _this = this;\n\n    // Get the selector text to be used for filtering\n    var filterSelector = _this.getFilterSelector();\n\n    // Filter using the selector on Isotope\n    _this.$grid.isotope({\n      filter: filterSelector,\n    });\n\n  },\n\n  // Return a string selector based on the filter values\n  // Eg. '[data-filters*=age-20]'\n  //     '[data-filters*=age-20][data-filters*=subject-subject-1]'\n  getFilterSelector: function() {\n    var _this = this;\n\n    var selector = '';\n\n    // Iterate thru the filters to get it's values\n    _this.$filters.each( function(index) {\n      if(this.value) {\n\n        // Build up selector string\n        selector += '[data-filters*=' + this.dataset.filter + '-' + this.value + ']';\n      }\n    });\n\n    return selector;\n  },\n\n};\n\nSite.init();\n"]}